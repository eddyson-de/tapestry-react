plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "com.moowork.node" version "1.1.0"
}

description = "Use React together with Tapestry"

group = "de.eddyson"
version = "0.27.0"

apply plugin: 'groovy'
apply plugin: 'maven'


def versions= [
  react: '15.5.3',
  webjars: '1.0.0',
  tapestry: '5.4.1',
  slf4j: '1.7.25',
  
  // test scopes
  spock: '1.0-groovy-2.4',
  selenium: '2.53.1'
  
]

repositories {
  jcenter()
}

sourceCompatibility = '1.7'

task sourceJar(type: Jar) {
  dependsOn classes
  classifier "sources"
  from sourceSets.main.allSource
}

artifacts {
  archives sourceJar
}

dependencies {
  compile "org.slf4j:slf4j-api:$versions.slf4j"
  compile "org.apache.tapestry:tapestry-core:$versions.tapestry"
  compile "de.eddyson:tapestry-webjars:$versions.webjars"
  compile ("org.apache.tapestry:tapestry-webresources:$versions.tapestry"){
    exclude group:'com.google.javascript', module: 'closure-compiler'
    exclude group:'com.github.sommeri', module: 'less4j'
  }
  compile "commons-io:commons-io:2.5"
  runtime ("org.webjars.npm:react:$versions.react"){
    transitive = false
  }
  runtime ("org.webjars.npm:react-dom:$versions.react"){
    transitive = false
  }
  runtime ("org.webjars.npm:prop-types:15.5.6"){
    transitive = false
  }
  runtime "org.webjars.npm:babel-standalone:6.24.0"

  testCompile "javax.servlet:servlet-api:2.5"
  testCompile "org.spockframework:spock-tapestry:$versions.spock"
  testCompile 'de.eddyson:tapestry-geb:0.29.0'
  testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$versions.selenium"
  testCompile "org.apache.tapestry:tapestry-webresources:$versions.tapestry"
  
  testRuntime "org.slf4j:slf4j-simple:$versions.slf4j"
  testRuntime 'org.objenesis:objenesis:2.5.1'
}

def compiledCoffeeScriptDir = "${project.buildDir}/compiled-coffeescript"

task compileCoffeeScript(type: NodeTask, dependsOn: npmInstall) {
  inputs.files fileTree(dir: 'src/main/resources/META-INF/modules', include: '**/*.coffee')
  outputs.dir compiledCoffeeScriptDir

  script = file('node_modules/.bin/coffee')
  args = [ "-c", "-o", compiledCoffeeScriptDir, 'src/main/resources/META-INF/modules' ]
  doFirst {
    delete compiledCoffeeScriptDir
  }
}

jar {
  dependsOn compileCoffeeScript
  manifest { attributes 'Tapestry-Module-Classes': 'de.eddyson.tapestry.react.modules.ReactModule' }
  rootSpec.exclude 'META-INF/modules/**/*.coffee'
  from(compiledCoffeeScriptDir){ into "META-INF/modules" }
}

tasks.withType(Test){
  systemProperties["tapestry.service-reloading-enabled"] = "false"
  systemProperties["tapestry.execution-mode"] = "test"
  systemProperty 'webappLocation', 'src/test/webapp'
  systemProperty 'jettyPort', 9040
  enableAssertions = true
  testLogging {
    exceptionFormat "full"
  }
}

task runTestApp(type:JavaExec) {
  main = 'org.apache.tapestry5.test.Jetty7Runner'
  args "-d", "src/test/webapp/", "-p", "9040"
  systemProperties["tapestry.execution-mode"] = "test"
  classpath = configurations.testRuntime + sourceSets.test.output + sourceSets.main.output
}

clean {
  delete 'node_modules'
}

bintray {
    user = 'fooberger'
    key = System.env.bintrayAPIKey
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = 'de.eddyson:tapestry-react'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/eddyson-de/tapestry-react'
    }
}
