plugins {
  id "groovy"
  id "maven-publish"
  id "com.github.node-gradle.node" version "3.1.0"
}

description = "Use React together with Tapestry"

group = "de.eddyson"
version = "0.33.0"

def versions= [
  tapestry: '5.6.1',
  slf4j: '1.7.31',

  // test scopes
  spock: '1.3-groovy-2.5',
  geb: '4.1',
  selenium: '3.141.59'
]

repositories {
  mavenCentral()
  maven { url "https://jitpack.io" }
}

sourceCompatibility = "11"

task sourceJar(type: Jar) {
  dependsOn classes
  classifier "sources"
  from sourceSets.main.allSource
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      artifact tasks.sourceJar
    }
  }
}

dependencies {
  implementation "org.slf4j:slf4j-api:$versions.slf4j"
  implementation "org.apache.tapestry:tapestry-core:$versions.tapestry"
  implementation ("org.apache.tapestry:tapestry-webresources:$versions.tapestry"){
    exclude group:'com.google.javascript', module: 'closure-compiler'
    exclude group:'com.github.sommeri', module: 'less4j'
  }
  implementation "commons-io:commons-io:2.6"
  implementation "org.mozilla:rhino:1.7.13" // DNK-2311

  testImplementation "javax.servlet:javax.servlet-api:4.0.1"
  testImplementation "org.spockframework:spock-tapestry:$versions.spock"
  testImplementation "com.github.eddyson-de:tapestry-geb:0.45.2"
  testImplementation "org.gebish:geb-spock:$versions.geb"
  testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:$versions.selenium"
  testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$versions.selenium"
  testImplementation "org.apache.tapestry:tapestry-webresources:$versions.tapestry"
  testImplementation "io.github.bonigarcia:webdrivermanager:4.4.3"

  testImplementation "org.slf4j:slf4j-simple:$versions.slf4j"
}

def compiledCoffeeScriptDir = "${project.buildDir}/compiled-coffeescript"

task compileCoffeeScript(type: NpxTask) {
  dependsOn npmInstall

  command = "coffee"
  args = [ "-c", "-o", compiledCoffeeScriptDir, 'src/main/resources/META-INF/modules' ]

  inputs.files fileTree(dir: 'src/main/resources/META-INF/modules', include: '**/*.coffee')
  outputs.dir compiledCoffeeScriptDir

  doFirst {
    delete compiledCoffeeScriptDir
  }
}

processResources {
  dependsOn npmInstall
  from('node_modules/react/umd'){
    into 'de/eddyson/tapestry/react/services'
  }
  from('node_modules/react-dom/umd'){
    into 'de/eddyson/tapestry/react/services'
  }
  from('node_modules/prop-types'){
    include 'prop-types*.js'
    into 'de/eddyson/tapestry/react/services'
  }
  from('node_modules/babel-standalone'){
    include 'babel.min.js'
    into 'de/eddyson/tapestry/react/services'
  }
}

jar {
  dependsOn compileCoffeeScript
  manifest { attributes 'Tapestry-Module-Classes': 'de.eddyson.tapestry.react.modules.ReactModule' }
  rootSpec.exclude 'META-INF/modules/**/*.coffee'
  from(compiledCoffeeScriptDir){ into "META-INF/modules" }
}

tasks.withType(Test){
  systemProperty "geb.env", System.getProperty("geb.env") ?: 'firefox'
  systemProperty "tapestry.service-reloading-enabled", "false"
  systemProperty "tapestry.execution-mode", "test"
  systemProperty 'webappLocation', 'src/test/webapp'
  systemProperty 'jettyPort', 9040
  enableAssertions = true
  testLogging {
    exceptionFormat "full"
  }
}

task runTestApp(type:JavaExec) {
  mainClass = "org.apache.tapestry5.test.JettyRunner"
  args "-d", "src/test/webapp/", "-p", "9040"
  systemProperties["tapestry.execution-mode"] = "test"
  classpath = configurations.testRuntimeClasspath + sourceSets.test.output + sourceSets.main.output
}

clean {
  delete 'node_modules'
}
